// script.SendOrder.txt
// Sends an item in a Sale to a remote (Kitchen) Printer
// **************************************************************************

int maxDestinations = 2;

boolean[] hasProducts = new boolean[maxDestinations];

boolean[] hasProductsCancelled = new boolean[maxDestinations];

String[] destinationsNames = new String[] {
    "Kitchen",
    "Bar"
};

String[] destinationsTicket = new String[] {
    "Printer.TicketKitchen",
    "Printer.TicketBar"
};

String[] destinationsTicketChange = new String[] {
    "Printer.TicketChange_Kitchen",
    "Printer.TicketChange_Bar"
};
 
for (int i= 0; i < ticket.getLinesCount(); i++) {
    line = ticket.getLine(i);
 
    line.prepareDestinationProperties();

    for (int j = 0; j < maxDestinations; j++) {
        if (line.isFromDestination(destinationsNames[j])) {
            if (line.isCancelled()) {
                hasProductsCancelled[j] = true;
            } else if (!line.isSent()) {
                hasProducts[j] = true;
            }
        }
    }
}

boolean hasProducts2 = false;
boolean hasProductsCancelled2 = false;

for (int i = 0; i < maxDestinations; i++) {
    if ((hasProductsCancelled[i] && hasProducts[i]) || (hasProductsCancelled[i] && !hasProducts[i])) {
        sales.printTicket(destinationsTicketChange[i]);
    }

    if (hasProducts[i] && !hasProductsCancelled[i]) {
        sales.printTicket(destinationsTicket[i]);
    }

    hasProducts2 = hasProducts2 || hasProducts[i];
    hasProductsCancelled2 = hasProductsCancelled2 || hasProductsCancelled[i];
}

if (hasProducts2) {
    javax.swing.JOptionPane.showMessageDialog(null, "Your order has been sent"); 
} else if (hasProductsCancelled2) {
    javax.swing.JOptionPane.showMessageDialog(null, "Your order with cancelled products has been sent"); 
} else {
    javax.swing.JOptionPane.showMessageDialog(null, "Nothing to send", "Warning", JOptionPane.WARNING_MESSAGE);
}

for (int i = ticket.getLinesCount() - 1; i >= 0; i--) {
    line = ticket.getLine(i);

    if (line.isCancelled()) {
        ticket.removeLine(i);
        continue;
    }

    for (int j = 0; j < maxDestinations; j++) {
        if (line.isFromDestination(destinationsNames[j]) && !line.isSent()) {
            line.setSent(true);
        }
    }    
}